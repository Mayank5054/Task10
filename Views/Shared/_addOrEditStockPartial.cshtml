@model Task10.Models.stockViewModel

<form id="StockForm">
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(x => x.stock.StockId)
        <div class="form-group">
            @Html.LabelFor(model => model.ItemNames, "ItemId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ItemId", Model.ItemNames, htmlAttributes: new { @class = "form-control item" })
                @Html.ValidationMessageFor(model => model.ItemNames, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.stock.Qty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.stock.Qty, new { htmlAttributes = new { @class = "form-control", type = "number", min = "0" } })
                @Html.ValidationMessageFor(model => model.stock.Qty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.stock.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div>
                    In:
                    @Html.RadioButtonFor(model => model.stock.Type, "In")
                    Out:
                    @Html.RadioButtonFor(model => model.stock.Type, "Out")
                </div>
                @Html.ValidationMessageFor(model => model.stock.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.stock.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.stock.Date, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                @Html.ValidationMessageFor(model => model.stock.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (Model.stock.StockId == 0)
                {
                    <input type="submit" value="Create" class="btn btn-success addStock" />
                }
                else
                {
                    <input type="submit" value="Update" class="btn btn-success addStock" />
                }
            </div>
        </div>
    </div>
</form>
