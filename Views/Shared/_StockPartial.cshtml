@model IEnumerable<Task10.Models.Stock>


    <div class="d-flex justify-content-between my-4">
        <button id="addOrEditStock" type="button" class="btn btn-primary" data-id="0" value="Add Stock">Add Stock</button>
    </div>
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Stocks</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table" id="stockTable">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Product.Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Qty)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Type)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Date)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CreatedOn)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.UpdatedOn)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CreatedBy)
                        </th>
                        <th>Actions</th>
                    </tr>

                    @foreach (var item in Model)
                    {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Product.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Qty)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Type)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Date)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreatedOn)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.UpdatedOn)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.User.Fullname)
                        </td>
                        <td>
                            <button id="addOrEditStock" type="button" class="btn border-warning btn-sm" data-id=@item.StockId>Edit</button>
                            <button id="deleteStock" type="button" class="btn border-danger btn-sm" data-id=@item.StockId>Delete</button>
                        </td>
                    </tr>
                    }

                </table>

            </div>
        </div>
    </div>
    <div class="modal" tabindex="-1" id="stockModal" data-backdrop="static">
        <div class="modal-dialog modal-md">
            <div class="modal-content">
                <div class="modal-header">
                    <h2 class="modal-title">Add Stocks</h2>
                    <button class="btn btn-secondary" type="button" data-dismiss="modal">x</button>
                </div>
                <div class="modal-body addOrEdit-modal-body">

                </div>
            </div>
        </div>
    </div>

    <script>
        $(document).ready(function () {
            $(document).on('click', '.stocksLink', function () {
                $.ajax({
                    method: "GET",
                    url: "/Stock/Stocks",
                    contentType: false,
                    success: function (response) {
                        $('#content-body').html(response);
                    },
                    error: function (xhr, status, error) {
                        console.log("error" + error);
                    }
                });
            });

            //Get data into modal for add or edit stock
            $(document).on('click', '#addOrEditStock', function () {
                var id = $(this).data('id');
                $('.addOrEdit-modal-body').html('');
                $.ajax({
                    method: "GET",
                    url: "/Stock/AddOrEditStock/" + id,
                    contentType: false,

                    success: function (response) {
                        $('.addOrEdit-modal-body').html(response);
                        $('#stockModal').modal('show');
                        $.validator.unobtrusive.parse($("#StockForm"));
                    }
                });
            });

            //save data into model after add or edit stock
            $(document).on('submit', '#StockForm', function (e) {
                e.preventDefault();
                $.ajax({
                    method: "POST",
                    url: "/Stock/SaveStock/",
                    data: $(this).serialize(),

                    success: function (response) {
                        $('#stockModal').modal('hide');
                        $('.stocksLink').click();
                    },

                    error: function (xhr, status, error) {
                        console.log('error', error);
                    }
                });
            });

            //send stock report email to admin
            $(document).on('click', '#sendEmail', function () {
                $.ajax({
                    method: "GET",
                    url: "/Stock/SendStockReportEmail",
                    contentType: "application/json",
                    success: function (response) {
                        if (response.success) {
                            alert(response.message);
                        } else {
                            alert("Failed to send email.");
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log("Error: " + error);
                    }
                });
            });


            //delete stock
            $(document).on('click', '#deleteStock', function () {
                var id = $(this).data('id');
                if (confirm("Are you sure you want to delete this item?")) {
                    $.ajax({
                        method: "GET",
                        url: "/Stock/DeleteStock/" + id,

                        success: function (response) {
                            if (response.success) {
                                console.log("Item deleted successfully!!");
                                $('.stocksLink').click();
                            }
                        },

                        error: function (xhr, status, error) {
                            console.log('error');
                            console.log('errorStatus', xhr);
                        }
                    });
                }
            });
        });
    </script>
