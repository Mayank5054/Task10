
@using Task10.Models;
@model User
@{
    if (ViewBag.UserExists != null)
    {
        <script>$.notify("@ViewBag.UserExists", "error");</script>

    }
}

@using (Html.BeginForm("RegisterUser", "Authentication", FormMethod.Post, new
{
    @id = "LoginForm"
}))
{
    <div class="form-floating mt-3 mb-3 ">
        @Html.TextBoxFor(model => model.BirthDate, "{0:yyyy-MM-dd}", new { type = "date", id = "contactNumber", @class = "form-control", style = "max-width:100%;height:50px !important", placeholder = "" })
        @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label" })
        @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
    </div>
    <div class="form-floating mt-3 mb-3 ">
        @Html.TextBoxFor(model => model.ContactNo, new { id = "contactNumber", @class = "form-control", style = "max-width:100%;height:50px !important", placeholder = "" })
        @Html.LabelFor(model => model.ContactNo, htmlAttributes: new { @class = "control-label" })
        @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
    </div>
    <div class="form-floating mt-3 mb-3 ">
        @Html.TextBoxFor(model => model.Email, new { id = "contactNumber", @class = "form-control", style = "max-width:100%;height:50px !important", placeholder = "" })
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
    </div>
    <div class="form-floating mt-3 mb-3 ">
        @Html.TextBoxFor(model => model.Fullname, new { id = "contactNumber", @class = "form-control", style = "max-width:100%;height:50px !important", placeholder = "" })
        @Html.LabelFor(model => model.Fullname, htmlAttributes: new { @class = "control-label" })
        @Html.ValidationMessageFor(model => model.Fullname, "", new { @class = "text-danger" })
    </div>

    <div class="form-floating mt-3 mb-3 ">
        @Html.TextBoxFor(model => model.Password, new { id = "contactNumber", @class = "form-control", style = "max-width:100%;height:50px !important", placeholder = "" })
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
    </div>
    <div class="form-floating mt-3 mb-3 ">
        @Html.DropDownListFor(model => model.Type,
    new SelectList(
       new List<SelectListItem>
       {
              new SelectListItem
              {
                  Text= "Customer",
                  Value = "Customer",
                  Selected = true
              },
           //              new SelectListItem
           //{
           //    Text= "Cook",
           //    Value = "Cook",
           //},
           //                new SelectListItem
           //{
           //    Text= "Cashier",
           //    Value = "Cashier",
           //},
           //                  new SelectListItem
           //{
           //    Text= "Admin",
           //    Value = "Admin",
           //},
       },
       "Value", "Text"
        ),"Select"
    , new { id = "contactNumber", @class = "form-control", style = "max-width:100%;height:60px !important", placeholder = "",  })
        @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label" })
        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
    </div>
    <button class="btn btn-primary">Submit</button>
}

